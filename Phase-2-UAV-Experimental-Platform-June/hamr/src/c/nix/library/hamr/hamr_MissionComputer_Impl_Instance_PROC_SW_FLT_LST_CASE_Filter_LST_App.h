#ifndef SIREUM_H_hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App
#define SIREUM_H_hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App
#include <types.h>

void hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_init(STACK_FRAME_ONLY);

art_Bridge_EntryPoints hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_entryPoints(STACK_FRAME_ONLY);
Z hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_appPortId(STACK_FRAME_ONLY);
Option_882048 hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_appPortIdOpt(STACK_FRAME_ONLY);
Z hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_filter_inPortId(STACK_FRAME_ONLY);
Option_882048 hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_filter_inPortIdOpt(STACK_FRAME_ONLY);

Z hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_main(STACK_FRAME IS_948B60 args);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_atExit(STACK_FRAME_ONLY);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_initialiseArchitecture(STACK_FRAME Z seed);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_initialise(STACK_FRAME_ONLY);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_compute(STACK_FRAME_ONLY);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_exit(STACK_FRAME_ONLY);

Unit hamr_MissionComputer_Impl_Instance_PROC_SW_FLT_LST_CASE_Filter_LST_App_finalise(STACK_FRAME_ONLY);

#endif